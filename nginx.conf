# Nginx Configuration for Fragrance AI (Production)
# This configuration provides SSL/HTTPS support and load balancing

upstream backend_api {
    # Backend FastAPI servers
    server localhost:8000 weight=1 max_fails=3 fail_timeout=30s;
    # Add more backend servers for load balancing
    # server localhost:8001 weight=1 max_fails=3 fail_timeout=30s;
    # server localhost:8002 weight=1 max_fails=3 fail_timeout=30s;
}

upstream frontend_app {
    # Frontend Next.js servers
    server localhost:3000 weight=1 max_fails=3 fail_timeout=30s;
    # Add more frontend servers for load balancing
    # server localhost:3001 weight=1 max_fails=3 fail_timeout=30s;
}

# HTTP - Redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name fragrance-ai.com www.fragrance-ai.com;

    # Allow Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS - Main configuration
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name fragrance-ai.com www.fragrance-ai.com;

    # SSL Certificate paths (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/fragrance-ai.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/fragrance-ai.com/privkey.pem;

    # SSL Configuration (Modern)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Logging
    access_log /var/log/nginx/fragrance-ai-access.log;
    error_log /var/log/nginx/fragrance-ai-error.log;

    # Max upload size
    client_max_body_size 10M;

    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
    gzip_disable "msie6";

    # API Backend proxy
    location /api/ {
        proxy_pass http://backend_api/;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;

        # WebSocket support (if needed)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Buffering
        proxy_buffering off;
        proxy_request_buffering off;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;

        # CORS (handled by FastAPI, but can be double-checked here)
        # add_header Access-Control-Allow-Origin "https://fragrance-ai.com" always;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://backend_api/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        access_log off;
    }

    # Metrics endpoint (protected)
    location /metrics {
        proxy_pass http://backend_api/metrics;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        # Restrict access to monitoring IPs only
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }

    # Frontend Next.js app
    location / {
        proxy_pass http://frontend_app;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support for HMR (development)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Cache control for static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Service Worker - no cache
    location /sw.js {
        proxy_pass http://frontend_app/sw.js;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        expires off;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # PWA Manifest
    location /manifest.json {
        proxy_pass http://frontend_app/manifest.json;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }

    # Robots.txt
    location /robots.txt {
        proxy_pass http://frontend_app/robots.txt;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }

    # Block access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
